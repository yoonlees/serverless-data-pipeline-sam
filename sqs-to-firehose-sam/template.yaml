AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  sqs-to-firehose

  SAM Template for sqs-to-firehose

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3

Parameters:
  S3BucketName:
    Type: String
    Default: "sqs-to-firehose"
    Description: "Bucket name for files saved in S3 for sqs-to-firehose"
  S3ObjPrefix:
    Type: String
    Default: "data"
    Description: "Prefix for files saved in S3 for sqs-to-firehose"
  LambdaMonitorTemplateURL:
    Type: String
    Description: URL to the template for Lambda monitoring.
    Default: ""
  LambdaMonitorAlarmTopicARN:
    Type: String
    Description: ARN of the SNS Topic that receives alarm notifications.
    Default: ""
  LogSubscriptionARN:
    Type: String
    Description: ARN to subscribe CloudWatchLogs to.
    Default: ""
  LogKMSKeyARN:
    Type: String
    Description: ARN to encrypt Logs with.
    Default: ""

Conditions:
  HasLambdaMonitor: !Not [ !Equals [ !Ref LambdaMonitorTemplateURL, "" ] ]
  HasLogEncryption: !Not [ !Equals [ !Ref LogKMSKeyARN, "" ] ]

Resources:
  LambdaFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    DependsOn:
      - LambdaFunctionLogs
    Properties:
      FunctionName: !Sub "${AWS::StackName}-LambdaFunction"
      CodeUri: lambda/
      Handler: app.lambda_handler
      Runtime: python3.7
      Environment:
        Variables:
          QUEUE_NAME:
            !GetAtt StreamQueue.QueueName
          S3_BUCKET:
            !Ref S3BucketName
          S3_OBJ_PREFIX:
            !Ref S3ObjPrefix
      Events:
        SqsJobQueue:
          Type: SQS
          Properties:
            Queue: !GetAtt StreamQueue.Arn
            BatchSize: 1
      Policies:
        - AWSLambdaBasicExecutionRole
        - S3WritePolicy:
            BucketName:
              !Ref S3BucketName
        - SQSPollerPolicy:
            QueueName:
              !GetAtt StreamQueue.QueueName
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - sqs:GetQueueUrl
              Resource:
                !GetAtt StreamQueue.Arn
  LambdaFunctionLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${AWS::StackName}-LambdaFunction"
      RetentionInDays: 30
      KmsKeyId: !If [ HasLogEncryption, !Ref LogKMSKeyARN, !Ref "AWS::NoValue" ]

  # sns topics that the lambda depends on
  StreamTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: "call-firehose"

  # sqs queues that the lambda uses
  StreamQueue:
    Type: AWS::SQS::Queue

  QueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Ref StreamQueue
      PolicyDocument:
        Statement:
          - Action: sqs:SendMessage
            Effect: Allow
            Resource: !GetAtt StreamQueue.Arn
            Principal:
              Service: sns.amazonaws.com

  QueueSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      TopicArn: !Ref StreamTopic
      Endpoint: !GetAtt StreamQueue.Arn
      Protocol: sqs


Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  LambdaFunction:
    Description: "sqs-to-firehose Lambda Function ARN"
    Value: !GetAtt LambdaFunction.Arn
  QueueARN:
    Description: "sqs-to-firehose SQS ARN"
    Value: !GetAtt StreamQueue.Arn
  QueueName:
    Description: "sqs-to-firehose SQS Queue Name"
    Value: !GetAtt StreamQueue.QueueName
